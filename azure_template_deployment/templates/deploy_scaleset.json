{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.7",
    "parameters": {
        "InstanceType": {
            "defaultValue": "Standard_F2",
            "type": "String",
            "metadata": {
                "description": "Size of the VMs in the VM Scale Set. The default is Standard_F2."
            }
        },
        "FOSVersion": {
            "defaultValue": "6.0.3",
            "type": "String",
            "metadata": {
                "description": "FortiOS version supported by FortiGate autoscale for Azure."
            },
            "allowedValues": ["6.0.02", "6.0.3", "6.0.4"]
        },
        "VNetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": ["new", "existing"],
            "type": "String",
            "metadata": {
                "description": "Create a new Virtual Network or use an existing one."
            }
        },
        "VNetName": {
            "defaultValue": "autoscalevnet",
            "type": "String",
            "metadata": {
                "description": "Azure virtual network name."
            }
        },
        "SubnetAddressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "String",
            "metadata": {
                "description": "Prefix for IP addresses in the virtual network in CIDR notation. E.g. 10.0.0.0/16."
            }
        },
        "Subnet1Name": {
            "defaultValue": "subnet1",
            "type": "String",
            "metadata": {
                "description": "Public facing subnet 1 name."
            }
        },
        "Subnet1Prefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 prefix in CIDR notation. E.g. 10.0.1.0/24."
            }
        },
        "Subnet2Name": {
            "defaultValue": "subnet2",
            "type": "String",
            "metadata": {
                "description": "Protected subnet 2 name."
            }
        },
        "Subnet2Prefix": {
            "defaultValue": "10.0.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 prefix in CIDR notation. E.g. 10.0.2.0/24."
            }
        },
        "Subnet2LoadBalancerIP": {
            "defaultValue": "10.0.2.10",
            "type": "String",
            "metadata": {
                "description": "Static IP address of the internal load balancer on subnet2."
            }
        },
        "Subnet3Name": {
            "defaultValue": "subnet3",
            "type": "String",
            "metadata": {
                "description": "Private subnet 3 name."
            }
        },
        "Subnet3Prefix": {
            "defaultValue": "10.0.3.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 prefix in CIDR notation. E.g. 10.0.3.0/24."
            }
        },
        "PublicIPNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": ["new", "existing"],
            "type": "String",
            "metadata": {
                "description": "Create a new public IP address or use an existing one."
            }
        },
        "PublicIPAddressName": {
            "defaultValue": "autoscalepip",
            "type": "String",
            "metadata": {
                "description": "Public IP address name."
            }
        },
        "ScalingGroupNamePrefix": {
            "defaultValue": "fgtasg",
            "maxLength": 10,
            "type": "String",
            "metadata": {
                "description": "The prefix each VMSS Name is given when deploying the FortiGate autoscale template. The value of this parameter should be the same as for deploy_funcapp.json. The prefix cannot contain special characters \\/\"\"[]:|<>+=;,?*@& or begin with '_' or end with '.' or '-'."
            }
        },
        "InitialCapacity": {
            "defaultValue": 1,
            "type": "Int",
            "metadata": {
                "description": "The initial number of VM instances in the VMSS. Ranges from MinCapacity to MaxCapacity."
            }
        },
        "MinCapacity": {
            "defaultValue": 1,
            "type": "Int",
            "metadata": {
                "description": "Minimum number of VM instances in the VMSS (less than or equal to MaxCapacity)."
            }
        },
        "MaxCapacity": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Maximum number of VM instances in the VMSS."
            }
        },
        "ScaleOutThreshold": {
            "defaultValue": 80,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-out should occur."
            }
        },
        "ScaleInThreshold": {
            "defaultValue": 20,
            "type": "Int",
            "metadata": {
                "description": "Percentage of CPU utilization at which scale-in should occur."
            }
        },
        "AdminUsername": {
            "defaultValue": "azureadmin",
            "type": "String",
            "metadata": {
                "description": "FortiGate administrator username on all VMs."
            }
        },
        "AdminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "FortiGate administrator password on all VMs. This field must be between 11 and 26 characters and must include at least one uppercase letter, one lowercase letter, one digit, and one special character such as (! @ # $ %)."
            }
        },
        "EndpointURL": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Function App public URL."
            }
        }
    },
    "variables": {
        "namingInfix": "[resourceGroup().name]",
        "VMSSName": "[concat(parameters('ScalingGroupNamePrefix'), 'payg')]",
        "loadBalancerName": "[concat(variables('namingInfix'), '-PublicLB')]",
        "PublicLBFEName": "[concat(variables('namingInfix'),'-PublicLB-',parameters('Subnet1Name'),'-FrontEnd')]",
        "PublicLBBEName": "[concat(variables('namingInfix'),'-PublicLB-',parameters('Subnet1Name'),'-BackEnd')]",
        "publicIPID": "[resourceID(variables('namingInfix'),'Microsoft.Network/publicIPAddresses',parameters('PublicIPAddressName'))]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
        "natHTTPSPoolName": "[concat(variables('namingInfix'), 'natpoolHTTPS')]",
        "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
        "natStartPort": 50000,
        "natEndPort": 50119,
        "natBackendPort": 22,
        "natStartPortHTTPS": 40000,
        "natEndPortHTTPS": 40119,
        "natBackendPortHTTPS": 8443,
        "SecurityGrpforEntrySubnet": "[concat(variables('VMSSName'),'-',uniqueString(resourceGroup().id),'-SecGroup')]",
        "internalLBName": "[concat(variables('namingInfix'),'-InternalLB')]",
        "internalLBFEName": "[concat(variables('namingInfix'),'-ILB-',parameters('Subnet2Name'),'-FrontEnd')]",
        "internalLBBEName": "[concat(variables('namingInfix'),'-ILB-',parameters('Subnet2Name'),'-BackEnd')]",
        "nicName": "[concat(variables('namingInfix'), 'nic1')]",
        "nic2Name": "[concat(variables('namingInfix'), 'nic2')]",
        "ipConfigName": "[concat(variables('namingInfix'), '1ipconfig')]",
        "ipConfig2Name": "[concat(variables('namingInfix'), '2ipconfig')]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('PublicLBFEName'))]",
        "routeTableName": "[concat(parameters('Subnet3Name'),'-',variables('VMSSName'),'-RouteTable')]",
        "subnet2KnownIP": "[parameters('Subnet2LoadBalancerIP')]",
        "vnetID": "[resourceId(variables('namingInfix'),'Microsoft.Network/virtualNetworks', parameters('VNetName'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
        "routeTableId": "[resourceId('Microsoft.Network/routeTables',variables('routeTableName'))]",
        "userdata": "[concat('{\"config-url\": \"', parameters('EndpointURL'), '\"}\n')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableName')]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "routes": [
                    {
                        "name": "toDefault",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIPAddress": "[variables('subnet2KnownIP')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('VNetName')]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["[parameters('SubnetAddressPrefix')]"]
                },
                "subnets": [
                    {
                        "name": "[parameters('Subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet3Prefix')]",
                            "routeTable": {
                                "id": "[variables('routeTableId')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": ["[variables('routeTableName')]"],
            "condition": "[equals(parameters('VNetNewOrExisting'), 'new')]"
        },
        {
            "apiVersion": "2017-09-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "location": "[resourceGroup().location]",
            "name": "[variables('SecurityGrpforEntrySubnet')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Standard"
            },
            "name": "[parameters('PublicIPAddressName')]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "condition": "[equals(parameters('PublicIPNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "sku": {
                "name": "Standard"
            },
            "name": "[variables('internalLBName')]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLBFEName')]",
                        "properties": {
                            "privateIPAddress": "[variables('subnet2KnownIP')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLBBEName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFEName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBEName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
                            },
                            "protocol": "all",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "lbruleFE2all"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            },
            "dependsOn": ["[parameters('VNetName')]"]
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "sku": {
                "name": "Standard"
            },
            "name": "[variables('loadBalancerName')]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('PublicLBFEName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/', variables('PublicLBFEName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('bePoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "HTTPSRule"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('natPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('natStartPort')]",
                            "frontendPortRangeEnd": "[variables('natEndPort')]",
                            "backendPort": "[variables('natBackendPort')]"
                        }
                    },
                    {
                        "name": "[variables('natHTTPSPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "[variables('natStartPortHTTPS')]",
                            "frontendPortRangeEnd": "[variables('natEndPortHTTPS')]",
                            "backendPort": "[variables('natBackendPortHTTPS')]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('PublicIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('InstanceType')]",
                "tier": "Standard",
                "capacity": "[parameters('InitialCapacity')]"
            },
            "name": "[variables('VMSSName')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "fortinet_fg-vm_payg",
                "publisher": "fortinet",
                "product": "fortinet_fortigate-vm_v5"
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "caching": "ReadWrite",
                            "createOption": "FromImage",
                            "osType": "Linux"
                        },
                        "dataDisks": [
                            {
                                "diskSizeGB": "30",
                                "lun": 1,
                                "createOption": "Empty"
                            }
                        ],
                        "imageReference": {
                            "publisher": "Fortinet",
                            "offer": "fortinet_fortigate-vm_v5",
                            "sku": "fortinet_fg-vm_payg",
                            "version": "[parameters('FOSVersion')]"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('AdminUsername')]",
                        "adminPassword": "[parameters('AdminPassword')]",
                        "customData": "[base64(variables('userdata'))]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "networkSecurityGroup": {
                                        "id": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('SecurityGrpforEntrySubnet'))]"
                                    },
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('VNetName'), '/subnets/', parameters('Subnet1Name'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                                                    },
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natHTTPSPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "[variables('nic2Name')]",
                                "properties": {
                                    "primary": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfig2Name')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('VNetName'), '/subnets/', parameters('Subnet2Name'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLBName'), '/backendAddressPools/', variables('internalLBBEName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('VNetName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "name": "autoscalewad",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "autoscalewad",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('VMSSName'))]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "[parameters('MinCapacity')]",
                            "maximum": "[parameters('MaxCapacity')]",
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('VMSSName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('ScaleOutThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/',  variables('VMSSName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "[parameters('ScaleInThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('VMSSName'))]"
            ]
        }
    ]
}
