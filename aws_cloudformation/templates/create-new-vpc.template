{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a new VPC to deploy the FortiGate Autoscale Solution.",
    "Parameters": {
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. The FortiGate Autoscale solution uses two Availability Zones from your list and preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "VpcCidr": {
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the new VPC."
        },
        "PublicSubnet1Cidr": {
            "Type": "String",
            "Default": "10.0.0.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the public facing subnet located in Availability Zone 1."
        },
        "PublicSubnet2Cidr": {
            "Type": "String",
            "Default": "10.0.2.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the public facing subnet located in Availability Zone 2."
        },
        "ResourceTagPrefix": {
            "Type": "String",
            "AllowedPattern": "[0-9a-zA-Z@.#-]+",
            "MaxLength": 64,
            "ConstraintDescription": "Resource tag prefix can include numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 64.",
            "Description": "A prefix for tag key ResourceGroup on all resources. It's also used as the name prefix of all applicable resources. Can only contain numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 64."
        }
    },
    "Resources": {
        "FgtAsgVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VpcCidr"
                },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ResourceTagPrefix"
                                    },
                                    "fortigate-autoscale-vpc"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PublicSubnet1Cidr"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ResourceTagPrefix"
                                    },
                                    "fortigate-autoscale-vpc-subnet#1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Ref": "PublicSubnet2Cidr"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "AvailabilityZones"
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ResourceTagPrefix"
                                    },
                                    "fortigate-autoscale-vpc-subnet#2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "FgtDhcpOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": "ca-central-1.compute.internal",
                "DomainNameServers": ["AmazonProvidedDNS"]
            }
        },
        "FgtDhcpOptionsAssoc": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                },
                "DhcpOptionsId": {
                    "Ref": "FgtDhcpOptions"
                }
            }
        },
        "FgtInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "FgtIgwAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                },
                "InternetGatewayId": {
                    "Ref": "FgtInternetGateway"
                }
            }
        },
        "FgtPublicSubnetAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                }
            }
        },
        "FgtPublicSubnet1AclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "FgtPublicSubnetAcl"
                }
            },
            "DependsOn": ["FgtPublicSubnetAcl"]
        },
        "FgtPublicSubnet2AclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "FgtPublicSubnetAcl"
                }
            },
            "DependsOn": ["FgtPublicSubnetAcl"]
        },
        "FgtPublicSubnet1AclAssoc": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "FgtPublicSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "DependsOn": ["FgtPublicSubnetAcl", "PublicSubnet1"]
        },
        "FgtPublicSubnet2AclAssoc": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "FgtPublicSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "DependsOn": ["FgtPublicSubnetAcl", "PublicSubnet2"]
        },
        "FgtPublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "FgtAsgVpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "ResourceTagPrefix"
                                    },
                                    "fortigate-autoscale-vpc-route-table"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "FgtPublicSubnet1RouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "FgtPublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "DependsOn": ["FgtPublicSubnetRouteTable", "PublicSubnet1"]
        },
        "FgtPublicSubnet2RouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "FgtPublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "DependsOn": ["FgtPublicSubnetRouteTable", "PublicSubnet2"]
        },
        "FgtPublicSubnetRoute1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "FgtPublicSubnetRouteTable"
                },
                "GatewayId": {
                    "Ref": "FgtInternetGateway"
                }
            },
            "DependsOn": ["FgtIgwAttachment"]
        }
    },
    "Outputs": {
        "VpcId": {
            "Description": "VPC ID",
            "Value": {
                "Ref": "FgtAsgVpc"
            }
        },
        "VpcCidr": {
            "Description": "VPC CIDR",
            "Value": {
                "Ref": "VpcCidr"
            }
        },
        "PublicSubnet1Id": {
            "Description": "Public Subnet 1 ID",
            "Value": {
                "Ref": "PublicSubnet1"
            }
        },
        "PublicSubnet2Id": {
            "Description": "Public Subnet 2 ID",
            "Value": {
                "Ref": "PublicSubnet2"
            }
        }
    }
}
