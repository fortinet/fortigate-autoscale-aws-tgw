{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "FortiGate Autoscale Solution (with Transit Gateway integration). This template collects information for deployment then calls the actual deployment template. Please see the FortiGate Autoscale documentation for more details. **WARNING** You will be billed for the FortiGate On-Demand instances and related AWS resources if you create a stack from this template.",
    "Parameters": {
        "ResourceTagPrefix": {
            "Type": "String",
            "AllowedPattern": "[0-9a-zA-Z@.#-]+",
            "MaxLength": 50,
            "ConstraintDescription": "Resource tag prefix can include numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 50.",
            "Description": "A prefix for the tag key ResourceGroup on all resources. It's also used as the name prefix of all applicable resources. Can only contain numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 50."
        },
        "CustomIdentifier": {
            "Type": "String",
            "Default": "fgtASG",
            "MaxLength": "10",
            "AllowedPattern": "[A-Za-z0-9]+",
            "ConstraintDescription": "must only contain uppercase and lowercase letters and numbers",
            "Description": "An alternative name prefix to  be used on a resource that the “Resource tag prefix” cannot apply to. Can only contain numbers, lowercase letters, and uppercase letters. Max length is 10."
        },
        "S3BucketName": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Deployment resource S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the deployment package. Can contain numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "S3KeyPrefix": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Deployment package S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "Name of the S3 folder that stores the FortiGate Autoscale deployment resources. Can only contain numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). If provided, it must end with a forward slash (/)."
        },
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. The FortiGate Autoscale solution uses two Availability Zones from your list and preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "VpcCidr": {
            "Type": "String",
            "Default": "192.168.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the FortiGate Autoscale VPC."
        },
        "PublicSubnet1Cidr": {
            "Type": "String",
            "Default": "192.168.0.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the subnet located in Availability Zone 1 where the FortiGate Autoscale instances will be deployed to."
        },
        "PublicSubnet2Cidr": {
            "Type": "String",
            "Default": "192.168.1.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the subnet located in Availability Zone 2 where the FortiGate Autoscale instances will be deployed to."
        },
        "FortiGateInstanceType": {
            "Type": "String",
            "Default": "c5.large",
            "AllowedValues": [
                "t2.small",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Description": "Instance type to launch as FortiGate On-Demand instances. There are t2.small and compute-optimized instances such as c4 and c5 available with different vCPU sizes and bandwidths. For more information about instance types, see https://aws.amazon.com/ec2/instance-types/."
        },
        "FortiOSVersion": {
            "Type": "String",
            "Default": "Latest (6.2.3)",
            "AllowedValues": ["Latest (6.2.3)", "FortiOS 6.2.3"],
            "ConstraintDescription": "must be a valid FortiOS version from the selection.",
            "Description": "FortiOS version."
        },
        "LifecycleHookTimeout": {
            "Type": "Number",
            "Default": 480,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "The amount of time (in seconds) that can elapse before the FortiGate Autoscale lifecycle hook times out. Minimum is 60. Maximum is 3600."
        },
        "FgtAsgCooldown": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "The Auto Scaling group waits for the cooldown period (in seconds) to complete before resuming scaling activities. Minimum is 60. Maximum is 3600."
        },
        "FgtAsgDesiredCapacity": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The number of FortiGate instances the group should have at any time. Must keep at least 2 FortiGates in the group for High Availability. Minimum is 2."
        },
        "FgtAsgMinSize": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Minimum number of FortiGate instances in the Auto Scaling Group. Minimum is 2."
        },
        "FgtAsgMaxSize": {
            "Type": "Number",
            "Default": 4,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Maximum number of FortiGate instances in the Auto Scaling Group. Minimum is 2."
        },
        "FgtAsgHealthCheckGracePeriod": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "ConstraintDescription": "must be a valid number not less than 60.",
            "Description": "The length of time (in seconds) that Auto Scaling waits before checking an instance's health status. Minimum is 60."
        },
        "FgtAsgScaleInThreshold": {
            "Type": "Number",
            "Default": 25,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the FortiGate Auto Scaling group to scale-in (remove) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FgtAsgScaleOutThreshold": {
            "Type": "Number",
            "Default": 80,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the FortiGate Auto Scaling group to scale-out (add) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FortiGatePskSecret": {
            "Type": "String",
            "NoEcho": true,
            "MaxLength": "128",
            "Description": "A secret key for the FortiGate instances to securely communicate with each other. Can contain numbers and letters. Max length is 128."
        },
        "FortiGateAdminPort": {
            "Type": "Number",
            "Default": 8443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "A port number for FortiGate administration. Minimum is 1. Maximum is 65535. Do not use the FortiGate reserved ports.: 443, 541, 514, 703."
        },
        "FortiGateAdminCidr": {
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format and 0.0.0.0/0 is highly not recommended.",
            "Description": "CIDR block for external admin management access. **WARNING!** 0.0.0.0/0 accepts connections from any IP address. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses."
        },
        "KeyPairName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must specify an admin access key pair for FortiGate instances.",
            "Description": "Amazon EC2 Key Pair for admin access."
        },
        "HeartBeatInterval": {
            "Type": "Number",
            "Default": 30,
            "MinValue": 30,
            "MaxValue": 90,
            "ConstraintDescription": "must be a valid number between 30 and 90.",
            "Description": "The amount of time (in seconds) for FortiGate to send a heartbeat to the Autoscale handler. Minimum is 30. Maximum is 90."
        },
        "HeartBeatLossCount": {
            "Type": "Number",
            "Default": 3,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid number between 1 and 65535.",
            "Description": "Number of consecutively lost heartbeats. When the Heartbeat Loss Count has been reached, the VM is deemed unhealthy and fail-over activities will commence."
        },
        "TransitGatewaySupportOptions": {
            "Type": "String",
            "Default": "create one",
            "AllowedValues": ["create one", "use an existing one"],
            "ConstraintDescription": "must choose from the provided options.",
            "Description": "Create a Transit Gateway for the FortiGate Autoscale VPC to attach to, or specify to use an existing one."
        },
        "TransitGatewayId": {
            "Type": "String",
            "Default": "",
            "Description": "If you use an existing Transit Gateway, specify the ID of the Transit Gateway that the FortiGate Autoscale VPC is attached to."
        },
        "BgpAsn": {
            "Type": "Number",
            "MinValue": 64512,
            "Default": 65000,
            "MaxValue": 65534,
            "Description": "The Border Gateway Protocol (BGP) Autonomous System Number of the Customer Gateway of each FortiGate instance in the Auto Scaling Group. This value ranges from 64512 to 65534."
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "HasResourceTagPrefix": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ResourceTagPrefix"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateTransitGateway": {
            "Fn::Equals": [
                {
                    "Ref": "TransitGatewaySupportOptions"
                },
                "create one"
            ]
        },
        "UseLatestFortiOSVersion": {
            "Fn::Equals": [
                {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Split": [
                                " ",
                                {
                                    "Ref": "FortiOSVersion"
                                }
                            ]
                        }
                    ]
                },
                "Latest"
            ]
        }
    },
    "Resources": {
        "StackMainWorkload": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "ResourceTagPrefix": {
                        "Fn::If": [
                            "HasResourceTagPrefix",
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "ResourceTagPrefix"
                                        },
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "CustomIdentifier": {
                        "Ref": "CustomIdentifier"
                    },
                    "UniqueId": {
                        "Fn::Select": [
                            0,
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            2,
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "S3BucketName": {
                        "Ref": "S3BucketName"
                    },
                    "S3KeyPrefix": {
                        "Ref": "S3KeyPrefix"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "VpcCidr": {
                        "Ref": "VpcCidr"
                    },
                    "PublicSubnet1Cidr": {
                        "Ref": "PublicSubnet1Cidr"
                    },
                    "PublicSubnet2Cidr": {
                        "Ref": "PublicSubnet2Cidr"
                    },
                    "FortiGateInstanceType": {
                        "Ref": "FortiGateInstanceType"
                    },
                    "FortiOSVersion": {
                        "Fn::If": [
                            "UseLatestFortiOSVersion",
                            "LATEST",
                            {
                                "Fn::Join": [
                                    "",
                                    {
                                        "Fn::Split": [
                                            ".",
                                            {
                                                "Fn::Select": [
                                                    1,
                                                    {
                                                        "Fn::Split": [
                                                            " ",
                                                            {
                                                                "Ref": "FortiOSVersion"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "LifecycleHookTimeout": {
                        "Ref": "LifecycleHookTimeout"
                    },
                    "FgtAsgCooldown": {
                        "Ref": "FgtAsgCooldown"
                    },
                    "FgtAsgDesiredCapacity": {
                        "Ref": "FgtAsgDesiredCapacity"
                    },
                    "FgtAsgMinSize": {
                        "Ref": "FgtAsgMinSize"
                    },
                    "FgtAsgMaxSize": {
                        "Ref": "FgtAsgMaxSize"
                    },
                    "FgtAsgHealthCheckGracePeriod": {
                        "Ref": "FgtAsgHealthCheckGracePeriod"
                    },
                    "FgtAsgScaleInThreshold": {
                        "Ref": "FgtAsgScaleInThreshold"
                    },
                    "FgtAsgScaleOutThreshold": {
                        "Ref": "FgtAsgScaleOutThreshold"
                    },
                    "FortiGatePskSecret": {
                        "Ref": "FortiGatePskSecret"
                    },
                    "FortiGateAdminPort": {
                        "Ref": "FortiGateAdminPort"
                    },
                    "FortiGateAdminCidr": {
                        "Ref": "FortiGateAdminCidr"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "HeartBeatInterval": {
                        "Ref": "HeartBeatInterval"
                    },
                    "HeartBeatLossCount": {
                        "Ref": "HeartBeatLossCount"
                    },
                    "TransitGatewaySupportOptions": {
                        "Ref": "TransitGatewaySupportOptions"
                    },
                    "TransitGatewayId": {
                        "Ref": "TransitGatewayId"
                    },
                    "BgpAsn": {
                        "Ref": "BgpAsn"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${S3BucketName}.${S3Region}.amazonaws.com/${S3KeyPrefix}templates/workload.template",
                        {
                            "S3Region": {
                                "Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 30
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Resource tagging configuration"
                    },
                    "Parameters": ["ResourceTagPrefix", "CustomIdentifier"]
                },
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VpcCidr",
                        "PublicSubnet1Cidr",
                        "PublicSubnet2Cidr"
                    ]
                },
                {
                    "Label": {
                        "default": "FortiGate configuration"
                    },
                    "Parameters": [
                        "FortiGateInstanceType",
                        "FortiOSVersion",
                        "FortiGatePskSecret",
                        "FortiGateAdminPort",
                        "FortiGateAdminCidr",
                        "KeyPairName",
                        "BgpAsn"
                    ]
                },
                {
                    "Label": {
                        "default": "FortiGate auto scaling group configuration"
                    },
                    "Parameters": [
                        "LifecycleHookTimeout",
                        "FgtAsgDesiredCapacity",
                        "FgtAsgMinSize",
                        "FgtAsgMaxSize",
                        "FgtAsgHealthCheckGracePeriod",
                        "FgtAsgCooldown",
                        "FgtAsgScaleOutThreshold",
                        "FgtAsgScaleInThreshold"
                    ]
                },
                {
                    "Label": {
                        "default": "Transit Gateway configuration"
                    },
                    "Parameters": ["TransitGatewaySupportOptions", "TransitGatewayId"]
                },
                {
                    "Label": {
                        "default": "Failover management configuration"
                    },
                    "Parameters": ["HeartBeatLossCount", "HeartBeatInterval"]
                },
                {
                    "Label": {
                        "default": "Deployment resources configuration"
                    },
                    "Parameters": ["S3BucketName", "S3KeyPrefix"]
                }
            ],
            "ParameterLabels": {
                "CustomIdentifier": {
                    "default": "Resource name prefix"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VpcCidr": {
                    "default": "VPC CIDR"
                },
                "PublicSubnet1Cidr": {
                    "default": "Autoscale subnet 1 CIDR"
                },
                "PublicSubnet2Cidr": {
                    "default": "Autoscale subnet 2 CIDR"
                },
                "FortiGateInstanceType": {
                    "default": "Instance type"
                },
                "FortiOSVersion": {
                    "default": "FortiOS version"
                },
                "S3BucketName": {
                    "default": "S3 bucket name"
                },
                "S3KeyPrefix": {
                    "default": "S3 resource folder"
                },
                "LifecycleHookTimeout": {
                    "default": "Instance lifecycle timeout"
                },
                "FgtAsgCooldown": {
                    "default": "Scaling cooldown period"
                },
                "FgtAsgDesiredCapacity": {
                    "default": "Desired capacity"
                },
                "FgtAsgMinSize": {
                    "default": "Minimum group size"
                },
                "FgtAsgMaxSize": {
                    "default": "Maximum group size"
                },
                "FgtAsgHealthCheckGracePeriod": {
                    "default": "Health check grace period"
                },
                "FgtAsgScaleInThreshold": {
                    "default": "Scale-in threshold"
                },
                "FgtAsgScaleOutThreshold": {
                    "default": "Scale-out threshold"
                },
                "FortiGateAdminPort": {
                    "default": "Admin port"
                },
                "FortiGateAdminCidr": {
                    "default": "Admin CIDR block"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "FortiGatePskSecret": {
                    "default": "FortiGate PSK secret"
                },
                "HeartBeatInterval": {
                    "default": "Heart beat interval"
                },
                "HeartBeatLossCount": {
                    "default": "Heart beat loss count"
                },
                "TransitGatewaySupportOptions": {
                    "default": "Transit Gateway support"
                },
                "TransitGatewayId": {
                    "default": "Transit Gateway ID"
                },
                "ResourceTagPrefix": {
                    "default": "Resource tag prefix"
                },
                "BgpAsn": {
                    "default": "BGP ASN"
                }
            }
        }
    },
    "Outputs": {
        "ResourceTagPrefix": {
            "Description": "The value for Tag ResourceGroup on all resources deployed in this stack.",
            "Value": {
                "Fn::If": [
                    "HasResourceTagPrefix",
                    {
                        "Fn::Join": [
                            "-",
                            [
                                {
                                    "Ref": "ResourceTagPrefix"
                                },
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::Split": [
                                                "-",
                                                {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                "/",
                                                                {
                                                                    "Ref": "AWS::StackId"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        "Fn::Select": [
                            0,
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            2,
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "CustomIdentifier": {
            "Description": "The custom identifier you specified. This is used as a resource name prefix on those resources that have strict naming requirement.",
            "Value": {
                "Ref": "CustomIdentifier"
            }
        },
        "UniqueID": {
            "Description": "A globally unique ID for all resources in this deployment stack and nested stacks.",
            "Value": {
                "Fn::Select": [
                    0,
                    {
                        "Fn::Split": [
                            "-",
                            {
                                "Fn::Select": [
                                    2,
                                    {
                                        "Fn::Split": [
                                            "/",
                                            {
                                                "Ref": "AWS::StackId"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    }
}
